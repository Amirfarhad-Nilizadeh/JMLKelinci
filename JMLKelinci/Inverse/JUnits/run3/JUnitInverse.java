import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import java.util.Arrays;


public class JUnitInverse {

	@Test
	public void test() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 172641612, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669};

		int[] arr2 = {1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1762282061, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test1() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {};

		int[] arr2 = {134744072, 134744072, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845389, 940050440, 134744072, 134744072, 134761291, 1684826478, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1313564012, 1768842089, 1246579787, 1701602153, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1711012859, -67372037, -67372037, -67372037, -67372014, -76781202, 1667844685, 1280206188, 1768849513, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 810372171, 1701603694, 1667844685, 1280009580, 1768842089, 183913908, 1264938089};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test2() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1666533965, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667591273, 1852008714, 1246579787, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, -129, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1762282061, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694};

		int[] arr2 = {1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768835941, 1818848867, 1766477132, 1264938083, 1766477132, 1264938089, 1852008714, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768841833, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768845417, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if(arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test3() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {};

		int[] arr2 = {};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++) {
				if (arr2[arr1.length-1-i] != arr1[i]) {
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test4() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810};

		int[] arr2 = {1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810, 1515870810};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

}
