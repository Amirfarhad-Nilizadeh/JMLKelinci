import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import java.util.Arrays;


public class JUnitInverse {

	@Test
	public void test() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 172641612, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669};

		int[] arr2 = {1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1762282061, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test1() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {};

		int[] arr2 = {1667844685, 1280009580, 32843, 1701603694, 1667844685, 1279983690, 1296845669};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test2() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1768507981, 1280009580, 1768842089, 1246591050, 1298950510, 1667844685, 1280009580, 1768842089, 1280134219, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844712, 1280009580, 1765821285, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818886143, -8434356, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1079798889, 1851998208, 19301, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1280009580, 1768842089, 1246579787, 1701603694, 1667844965};

		int[] arr2 = {1828651008, 4867660, 1264938089, 1851981824, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1762282061, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701597294, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768824937, 1667844685};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if(arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test3() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1246579787, 1701603694, 1667844685, 1280009580, 1768842091, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694};

		int[] arr2 = {1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1768835661, 1280009580, 1768842089, 1246579787};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++) {
				if (arr2[arr1.length-1-i] != arr1[i]) {
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test4() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1246579787, 1701603694, 1667844685, 1280009580, 1768842091, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1699572078, 1667844685, 1280009580, 1768842094, 1870613069, 1280009580, 1768842089, 1246579787, 1701602153, 1246579787, 1701603694, 1667844685, 1280009727, -8388759, 1768835661, 1280009580, 1768842089, 1246579779, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 342, 1264938089, 1851981898, 1296845669, 1818848867, 1766477132};

		int[] arr2 = {};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test5() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837};

		int[] arr2 = {1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837, 1566399837};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

}
