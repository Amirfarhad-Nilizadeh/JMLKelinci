import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import java.util.Arrays;


public class JUnitInverse {

	@Test
	public void test() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 172641612, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669};

		int[] arr2 = {1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1762282061, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test1() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1667910221, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1701603694, 1667844685, 1280009580, -613522583, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1245727819, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1245268992, 1080846702, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1246587210, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1833585996, 1264938089, 1852009290, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1766477161, 1248722815, -38546, 1667844685, 1275068780, 1768842089, 1246514021};

		int[] arr2 = {};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test2() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {};

		int[] arr2 = {1667844685, 1280009580, 1768842089, 1246560272, 1701603694, 16796237, 1280009590, 1768842345, 1241599051, 1701145705, 1852008778, 1296845669, 1818848867, 1766681676, 1264874368, 1852008778, -850637979, 1818848867, 1766489932, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008791, 1783384933, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1819173737, 1246579787, 1701603694, 1667844671, 1280009580, 1768842089, 1246710859, 1265396841, 1852008778, 1296845669, 1768842089, 1246579787, 1701603694, 1667844685, 1280009580, 1768834153, 1246579787, 1701603694, 1667844685, 1280009580, 1768842114, 1246579787, 1701603694, 1667844685, 1280009580, 1768842089, 1818848867, 1649036652, 1768517219, 1766477132, 1264938089, 1852008778, 1296845669, 1818717795, 1766477132, 1264938089, 1852008778, 1296845669, 1818848867, 1264938089, 1852008778, 1296845669, 1818848867, 1766477132, 1264938089, 1852008778, 1296845669, 1667844685, 1280009580, 1768842089, 1045253195, 1701603694, 1668434509, 1280009580, 1768842105, 1246579776, 1701603694, 1667844685, 1280009580, 1768842089, 172641612, 1852008778};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if(arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test3() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1970632053, 1970632053, 1987409269, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, -2147483648, 1970632053, 1970632053, 1970632053, 1970632053, 1702196597, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1971287413, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053};

		int[] arr2 = {1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, -1837795979, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053, 1970632053};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++) {
				if (arr2[arr1.length-1-i] != arr1[i]) {
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test4() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117};

		int[] arr2 = {218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117, 218959117};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

}
